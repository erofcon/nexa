import streamlit as st
from langchain_core.prompts import PromptTemplate
from st_pages import add_page_title

from src.utils import llm

st.set_page_config(page_title='ü¶ú Nexa')

add_page_title()
st.text("–†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏")


def generate_response(dialogue: str):
    return llm(dialogue, max_tokens=2000, repeat_penalty=1.0)


PROMPT_TEMPLATE = """<|im_start|>\nuser\n–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –±–∞–∑–∏—Ä—É—è—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ —ç—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:

{context}

---
–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç: {question}<|im_end|>
"""
prompt_template = PromptTemplate(template=PROMPT_TEMPLATE, input_variables=["context", "question"])

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç", type=("txt", "md"))

question = st.text_input(
    "–°–ø—Ä–æ—Å–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ",
    placeholder="–ú–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –¥–∞—Ç—å –º–Ω–µ –∫—Ä–∞—Ç–∫–æ–µ –∏–∑–ª–æ–∂–µ–Ω–∏–µ?",
    disabled=not uploaded_file,
)

if uploaded_file and question:
    with st.spinner("–ü–æ–¥–æ–∂–¥–∏—Ç–µ ..."):
        context_text = uploaded_file.read().decode('utf-8')

        prompt = prompt_template.format(context=context_text, question=question)

        response = generate_response(dialogue=prompt)['choices'][0]['text']

        response = response.replace('assistant', '').replace('ssistant', '')

    st.write(response)
